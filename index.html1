<!DOCTYPE html>
<html>
<head>
  <title>PipeDirectoryMp</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <style>
    html, body, #map { height: 100%; margin: 0; padding: 0; }
    .form-popup {
      position: fixed;
      bottom: 20px;
      left: 20px;
      background: white;
      padding: 15px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0,0,0,0.3);
      z-index: 1000;
    }
    input, select, textarea { width: 100%; margin: 5px 0; padding: 5px; }
    .leaflet-marker-icon.remove-icon {
      background: red;
      border-radius: 50%;
      width: 10px;
      height: 10px;
    }
  </style>
</head>
<body>
  <div id="map"></div>
  <div class="form-popup" id="formPopup" style="display:none;">
    <h4>Pipe Segment Info</h4>
    <form id="pipeForm">
      <input type="text" placeholder="Footage (ft)" id="footage" required>
      <input type="text" placeholder="Pipe Size" id="pipeSize">
      <input type="text" placeholder="Lot Number" id="lotNumber">
      <select id="method">
        <option value="Trench">Trench</option>
        <option value="Bore">Bore</option>
      </select>
      <input type="text" placeholder="Tracer Wire Size" id="wireSize">
      <textarea placeholder="Notes" id="notes"></textarea>
      <input type="file" id="media" multiple accept="image/*,video/*">
      <button type="submit">Save Entry</button>
    </form>
  </div>

  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script>
    const map = L.map('map').setView([30.4, -89.0], 12);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      maxZoom: 20,
    }).addTo(map);

    let points = [];
    let markers = [];
    let segments = [];

    function createMarker(latlng) {
      const marker = L.marker(latlng, { draggable: true }).addTo(map);

      let holdTimer;

      function showOptions() {
        const action = prompt("Type 'delete' to remove this pin, or 'edit' to move it:");
        if (action === 'delete') {
          map.removeLayer(marker);
          markers = markers.filter(m => m !== marker);
          points = points.filter(p => p !== marker.getLatLng());
        } else if (action === 'edit') {
          marker.dragging.enable();
          alert("Pin is now editable. Drag it to a new location.");
        }
      }

      marker.on('contextmenu', showOptions);
      marker.on('mousedown', (e) => {
        if (e.originalEvent.button === 0) {
          holdTimer = setTimeout(showOptions, 1000);
        }
      });
      marker.on('mouseup', () => clearTimeout(holdTimer));
      marker.on('mouseout', () => clearTimeout(holdTimer));

      markers.push(marker);
      points.push(latlng);

      if (points.length === 2) {
        const line = L.polyline(points, { color: 'yellow' }).addTo(map);
        segments.push({ line, start: points[0], end: points[1] });
        openForm(points[0], points[1]);
        points = [];
      }
    }

    map.on('click', function(e) {
      createMarker(e.latlng);
    });

    function openForm(start, end) {
      const formPopup = document.getElementById("formPopup");
      formPopup.style.display = 'block';

      document.getElementById("pipeForm").onsubmit = function(e) {
        e.preventDefault();
        const entry = {
          start,
          end,
          footage: document.getElementById("footage").value,
          pipeSize: document.getElementById("pipeSize").value,
          lotNumber: document.getElementById("lotNumber").value,
          method: document.getElementById("method").value,
          wireSize: document.getElementById("wireSize").value,
          notes: document.getElementById("notes").value,
          media: document.getElementById("media").files
        };
        console.log("Saved entry:", entry);
        alert("Segment saved. Check console for details.");
        formPopup.style.display = 'none';
        document.getElementById("pipeForm").reset();
      };
    }
  </script>
</body>
</html>
